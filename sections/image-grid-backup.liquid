<style>
  .nerd--grid {
    display: grid;

  }

  .nerd--relative {
    position: relative;
  }

  .nerd--absolute-item-center {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  .nerd--flex-col {
    display: flex;
    flex-direction: column;
  }

  .nerd--image-grid-absolute {
    gap: 10px;
    align-items: center;
    justify-content: center;
  }

  .nerd--image-grid-bigimage {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .nerd--grid-image-wrapper > img {
    object-fit: cover;
    width: 100%;
    max-height: 100%;
    height: 100%;
  }

  .nerd--grid-image-wrapper{
    display: inline-block;
    height: 100%;
    width: 100%;
    padding: 3px;

  }


  @media screen and (max-width: 480px) {
    .nerd--grid-1-mobile {
      grid-template-columns: repeat(1, 1fr) !important;

    }
  }


  @media screen and (max-width: 990px) {
    .nerd--grid-1-tablet {
      grid-template-columns: repeat(1, 1fr);
    }
    .nerd--grid-2-tablet {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (min-width: 990px) {
    .nerd--grid-1-desktop{
      grid-template-columns: repeat(1, 1fr);
    }
    .nerd--grid-2-desktop {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>

{% liquid

  assign count = section.blocks.size
  if count == 1
    assign grid_1_class = "nerd--grid-1-desktop nerd--grid-1-tablet nerd--grid-1-mobile"
  elsif count == 2
    assign grid_1_class = "nerd--grid-2-desktop nerd--grid-1-tablet"
    assign grid_2_class = "nerd--grid-1-desktop nerd--grid-1-tablet nerd--grid-1-mobile"
  elsif count == 3
    assign grid_1_class = "nerd--grid-2-desktop nerd--grid-1-tablet"
    assign grid_2_class = "nerd--grid-2-desktop nerd--grid-2-tablet nerd--grid-1-mobile"
  else
    assign grid_1_class = "nerd--grid-2-desktop nerd--grid-1-tablet"
    assign grid_2_class = "nerd--grid-2-desktop nerd--grid-2-tablet nerd--grid-1-mobile"
 
    
  endif

%}

<div class="color-{{ section.settings.color_scheme }}">
  <div class="nerd--grid {{ grid_1_class }}">

    <div class="nerd--relative image-wrapper first">
      {% if count > 0 %}
        {% assign image = section.blocks.first.settings.image %}
        {% capture styles %}
          opacity: {{ section.settings.big_image_opacity }}%;
          {% endcapture %}
        {{
           image
         | image_url: width: image.width
         | image_tag: loading: 'lazy', class: 'nerd--image-grid-bigimage', style: styles }}
      {% else %}
        {{ 'lifestyle-1' | placeholder_svg_tag: "hw-full bg-cover" }}
      {% endif %}
      <div class="nerd--absolute-item-center nerd--flex-col nerd-text nerd--image-grid-absolute nerd-title">
        Hello
      </div>
    </div>
    <div class="nerd--grid nerd--grid-item {{ grid_2_class }} ">
      {% for block in section.blocks %}

        {% if forloop.index > 1 %}
        {% assign image = block.settings.image %}
        {% capture styles %}
          {% if count==4 and forloop.index==4 %}}
          grid-column: span 2;
            {% endif %}
          opacity : {{ block.settings.image_opacity }}%;
        {% endcapture %}
        <div class="nerd--grid-image-wrapper nerd--relative">
        {% if image %}
        
          
          {{
             image
           | image_url: width: image.width
           | image_tag: loading: 'lazy', style: styles }}
        
        {% else %}
          {{ 'lifestyle-1' | placeholder_svg_tag: "hw-full bg-cover" }}
        {% endif %}
          <div class="nerd--absolute-item-center nerd--flex-col nerd-text nerd--image-grid-absolute nerd-title">
        <div class=""> {{ block.settings.title }} {{ forloop.index }} </div>
        <div class=""> {{ block.settings.text }} </div>
      </div>
        </div>
          {% endif %}
      {% else %}
        {% for i in (1..4) %}

          <div class="nerd--grid-item image-wrapper nerd--image-small">
            {{ 'product-1' | placeholder_svg_tag: "hw-full bg-cover" }}
          </div>
        {% endfor %}
  
      {% endfor %}
    </div>

  </div>

</div>



{% schema %}
  {
    "name": "Image grid backup",
    "blocks": [
      {
        "name": "Image",
        "type": "image",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          }, {
            "type": "range",
            "id": "image_opacity",
            "min": 10,
            "max": 100,
            "step": 10,
            "unit": "%",
            "default": 90,
            "label": "Image Opacity"
          },
          {
            "type": "inline_richtext",
            "id": "title",
            "default": "Title",
            "label": "Title"
          },
          {
            "type": "richtext",
            "id": "text",
            "default": "<p>Some Text</p>",
            "label": "Description"
          }, {
            "type": "text",
            "id": "button_label",
            "default": "Shop now",
            "label": "Button Text"
          }
        ]
      }
    ],
    "settings": [
      {
        "type": "image_picker",
        "id": "image_big",
        "label": "Image"
      }, 
         {
            "type": "range",
            "id": "big_image_opacity",
            "min": 10,
            "max": 100,
            "step": 10,
            "unit": "%",
            "default": 90,
            "label": "Image Opacity"
          },
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "default": "background-7",
        "label": "Color Scheme"
      }
    ],
    "presets": [
      {
        "name": "Image Grid backup"
      }
    ]
  }
{% endschema %}